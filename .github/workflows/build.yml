name: Build

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
        
permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build and Push
    runs-on: [ubuntu-24.04]
    if: contains(github.event.head_commit.message, '#build')
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55
        with:
          driver-opts: "image=moby/buildkit:master"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.MY_PAT_TOKEN }}

      - name: Create a Single Tag
        id: create_tag
        run: |
          VERSION=$(date +'%Y%m%d')
          echo "TAG_NAME=v${VERSION}" >> $GITHUB_ENV
          echo "TAG_NAME=v${VERSION}" >> $GITHUB_OUTPUT
          echo "Created TAG_NAME=$TAG_NAME"

      - name: Extract repository name
        id: repo_name
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_OUTPUT

      - name: Extract branch name
        id: branch_name
        run: echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Build and push multi-arch image
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          no-cache: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ steps.repo_name.outputs.REPO_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ steps.repo_name.outputs.REPO_NAME }}:${{ steps.create_tag.outputs.TAG_NAME }}
          labels: |
            org.opencontainers.image.description=Multi-Arch ${{ steps.repo_name.outputs.REPO_NAME }} Image
          provenance: false
