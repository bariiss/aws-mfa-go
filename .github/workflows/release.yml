name: Release

on:
  push:
    tags:
      - 'v*'
    branches: [main]
  pull_request:
    branches: [main]
        
permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release and Push
    runs-on: [ubuntu-24.04]
    if: contains(github.event.head_commit.message, '#release')
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
      fail-fast: false

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Get dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Create version tag
        id: create_tag
        run: |
          VERSION=$(date +'%Y%m%d')
          echo "TAG_NAME=v${VERSION}" >> $GITHUB_ENV
          echo "Created TAG_NAME=$TAG_NAME"

      - name: Build Binary for Release
        run: |
          BINARY_NAME=aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          CGO_ENABLED=0 GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os }} go build -v -o $BINARY_NAME -a -trimpath -ldflags="-s -w -X main.version=${{ env.TAG_NAME }}" -installsuffix cgo

      - name: Verify Binary and Calculate Checksum
        run: |
          BINARY_NAME=aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          echo "Verifying binary existence..."
          ls -la $BINARY_NAME
          sha256sum $BINARY_NAME > ${BINARY_NAME}.sha256

      - name: Upload Release Assets
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}*
          retention-days: 5

      - name: Create Release
        if: success() && github.event_name != 'pull_request'
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.TAG_NAME }}
          files: |
            aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Handle Release Failure
        if: failure()
        run: |
          echo "Release creation failed. Retrying..."
          for i in {1..3}; do
            echo "Attempt $i"
            if gh release create ${{ env.TAG_NAME }} \
              --title "${{ env.TAG_NAME }}" \
              --generate-notes \
              aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}*; then
              echo "Release created successfully on attempt $i"
              exit 0
            fi
            echo "Release creation failed. Retrying in 10 seconds..."
            sleep 10
          done
          echo "Failed to create release after 3 attempts"
          exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
