name: Build and Release Multi-Arch aws-mfa-go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "debug"
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: "Test scenario tags"
        required: false
        type: boolean
      environment:
        description: "Environment to run tests against"
        type: environment
        required: false

jobs:
  release:
    name: Create Release and Attach Artifacts
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '#release')
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64, arm, armv6, armv7, ppc64le, s390x, riscv64, mips64, mips64le, mips, mipsle]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.0'

      - name: Create a Single Tag
        id: create_tag
        run: |
          VERSION=$(date +'%Y.%m.%d')
          echo "TAG_NAME=v${VERSION}" >> $GITHUB_ENV
          echo "Created TAG_NAME=$TAG_NAME"

      - name: Build Binary for Release
        run: |
          CGO_ENABLED=0 GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os }} go build -o aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }} -a -ldflags="-s -w" -installsuffix cgo

      - name: Verify Binary Existence
        run: |
          echo "Verifying binary existence..."
          ls -la aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }}

      - name: Upload Release Assets
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}
          path: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }}

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          files: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ env.TAG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT_TOKEN }}
