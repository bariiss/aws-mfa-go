name: Build and Release Multi-Arch aws-mfa-go

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag Name"
        required: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build Binary for Release
        run: |
          BINARY_NAME=aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ github.event.inputs.tag_name }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          CGO_ENABLED=0 GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os }} go build -o $BINARY_NAME -a -ldflags="-s -w" -installsuffix cgo

      - name: Verify Binary Existence
        run: |
          BINARY_NAME=aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ github.event.inputs.tag_name }}
          if [ "${{ matrix.os }}" == "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          echo "Verifying binary existence..."
          ls -la $BINARY_NAME

      - name: Upload Release Assets
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ github.event.inputs.tag_name }}*

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          name: Release ${{ github.event.inputs.tag_name }}
          files: aws-mfa-go-${{ matrix.os }}-${{ matrix.arch }}-${{ github.event.inputs.tag_name }}*
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT_TOKEN }}
